@page "/signin"
@inject NavigationManager nav
@inject IHttpContextAccessor http
@inject IJSRuntime JSRuntime


<AuthorizeView>
    <Authorized>
        <p class="alert-info">Вы уже в системе!</p>
    </Authorized>
    <NotAuthorized>
        <div class="login-place">
            <h3 class="text-center">Авторизация</h3>
            <div class="text-danger">@Message</div>
            <form method="post" action="login">
                <input class="form-control col-4" type="text" name="userName" placeholder="Имя" />
                <input class="form-control col-4" type="password" name="passWord" placeholder="Пароль" />
                <button class="btn btn-primary login-btn">Войти</button>
            </form>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {

    public string Message { get; set; } = null;

    protected override async Task OnInitializedAsync()
    {

        var uri = nav.ToAbsoluteUri(nav.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("message", out var message))
        {
            if (message == "error")
            {
                Message = "Логин или пароль введены некорректно";
            }
            else { Message = "Unhandled Exception"; }
        }
        await JSRuntime.InvokeVoidAsync("setTitle", "Авторизация");
    }





}
