@inject TradingPlatformBlazor.Data.Repository.ILot SqlLot
@inject TradingPlatformBlazor.Data.Repository.ICategory SqlCategory
@inject TradingPlatformBlazor.Data.Repository.IShopLot SqlShopLot
@inject IJSRuntime JSRuntime

@page "/lots/{id:int}"


@if (CurrentCategory == null)
{
    <ErrorComponent ErrorCode="404"></ErrorComponent>
}
else
{
<h1 class="name-category d-inline">@nameCategory</h1>

<AuthorizeView>
    <Authorized>
        <div class="block-addlot d-inline">
            <label class="addlot" for="button-addlot">
                <span class="oi oi-plus"></span>
            </label>
            <button id="button-addlot" @onclick="OpenDialog">Добавить лот</button>
        </div>
    </Authorized>
</AuthorizeView>
<div class="row">
    <div class="col users-lots">

        <div class="content-categorylots">
            <div class="container">
                <div class="row">
                    <div class="col border-right name-lot-categorylots">Название лота</div>
                    <div class="col-6 border-right desc-lot-categorylots">Описание лота</div>
                    <div class="col price-lot-categorylots">Цена</div>
                </div>

                @foreach (var lot in allLots)
                {

                    <a class="a-lot-categorylots" href="/lot/@lot.Id">
                        <div class="row border body-lot-categorylots">
                            <div class="col border-right  name-lot-categorylots">@lot.NameLot</div>
                            <div class="col-6 border-right desc-lot-categorylots">@MiniString(lot.DescLot)</div>
                            <div class="col price-lot-categorylots">@lot.Price</div>
                        </div>
                    </a>

                }
            </div>
        </div>
    </div>
    <div class="col shops-lots">
        <div class="content-categorylots">
            <div class="container">
                <div class="row">
                    <div class="col border-right name-lot-categorylots">Название лота</div>
                    <div class="col-6 border-right desc-lot-categorylots">Описание лота</div>
                    <div class="col price-lot-categorylots">Цена</div>
                </div>

                @foreach (var lot in allShopLots)
                {

                    <a class="a-lot-categorylots" href="/shoplot/@lot.Id">
                        <div class="row border body-lot-categorylots">
                            <div class="col border-right  name-lot-categorylots">@lot.NameLot</div>
                            <div class="col-6 border-right desc-lot-categorylots">@MiniString(lot.DescLot)</div>
                            <div class="col price-lot-categorylots">@lot.Price</div>
                        </div>
                    </a>

                }
            </div>
        </div>
    </div>
</div>
@if (DialogOpen)
{
    <AddLots Title="@nameCategory" OnClose="OnDialogClose" CategoryId="@Id" />

    }
}
@code {
    [Parameter]
    public int Id { get; set; }

    private string nameCategory;
    IEnumerable<Lot> allLots = new List<Lot>();
    public bool DialogOpen { get; set; }
    Category CurrentCategory { get; set; }
    IEnumerable<ShopLot> allShopLots = new List<ShopLot>();

    protected override async Task OnInitializedAsync()
    {
        CurrentCategory = SqlCategory.GetCategoryById(Id);
        if (CurrentCategory != null)
        {
            nameCategory = CurrentCategory.NameCategory;
            allLots = SqlLot.LotsByID(CurrentCategory.Id).ToList();

            allShopLots = SqlShopLot.ShopLotsByCategoryId(CurrentCategory.Id).ToList();
            await JSRuntime.InvokeVoidAsync("setTitle", nameCategory);
        }

    }


    private void OnDialogClose()
    {
        allLots = SqlLot.LotsByID(Id).ToList();

        allShopLots = SqlShopLot.ShopLotsByCategoryId(Id).ToList();
        DialogOpen = false;


    }
    private void OpenDialog()
    {
        DialogOpen = true;
    }

    string MiniString(string str)
    {
        if (string.IsNullOrWhiteSpace(str)) { return str; }
        else
        {
            if (str.Length > 50)
            {
                return new string(str.Substring(0, 50) + "...");
            }
            return str;
        }
    }
}
