@inherits LayoutComponentBase
@inject NavigationManager Navigation
@inject TradingPlatformBlazor.Data.Repository.IUser SqlUser
<div class="page">
    <!--<div class="sidebar">-->
    @*<NavMenu />*@

    <!--</div>-->

    <div class="main">
        <AuthorizeView>
            <Authorized>
                <div class="top-row px-4">
                    <AuthorizeView Context="any" Roles="Administrator">
                        <a href="/add_category">Админ-панель</a>
                    </AuthorizeView>

                    @if (user.IdShop != 0)
                    {<a>Магазин</a>}
                    @if (user.LevelUser == UserLevel.Third && user.IdShop == 0)
                    {<a href="/createshop">Создать магазин</a>}
                    <a href="/purchases">Покупки</a>
                    <a href="/sales">Продажи</a>
                    <a href="/messager">@message</a>
                    <a href="/logout">Log out</a>
                    <a href="/user/@context.User.FindFirst(ClaimTypes.NameIdentifier).Value" target="_top"><img class="user-img-top" src="/img/avatars/@context.User.Claims.FirstOrDefault(i => i.Type == "PathAvatar").Value" /></a>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="top-row px-4">
                    <a href="/signup">Sign up</a>
                    <a href="/signin">Sign in</a>
                </div>
            </NotAuthorized>
        </AuthorizeView>

        <div class="content px-4">
            @Body
        </div>
    </div>
</div>

@code{
    [Inject] IHttpContextAccessor htp { get; set; }
    HubConnection hubConnection;
    string message;
    User user;
    protected override async Task OnInitializedAsync()
    {
        if (htp.HttpContext.User.Claims.Any())
        {
            user = SqlUser.GetUserById(int.Parse(htp.HttpContext.User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.NameIdentifier).Value));
        }
        message = "Cooбщения";
        hubConnection = new HubConnectionBuilder()
  .WithUrl(Navigation.ToAbsoluteUri("/hub"), opt =>
  {
      if (htp.HttpContext.Request.Cookies.Count > 0)
      {
          opt.Cookies.Add(new Uri(Navigation.BaseUri), new System.Net.Cookie("Cookie", htp.HttpContext.Request.Cookies.Where(s => s.Key == "Cookie").FirstOrDefault().Value));
      }
  }).Build();

        hubConnection.On<Message>("ReceiveMessage", (mess) =>
        {


            StateHasChanged();

        });

        await hubConnection.StartAsync();

    }

    protected override void OnAfterRender(bool firstRender)
    {

    }
}
